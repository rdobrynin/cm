version: '3.8'

services:
  postgres:
    container_name: test-roman-postgres
    image: postgres:14.2
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PG_DATA: /var/lib/postgresql/data
    networks:
      - ta_net
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  api:
    container_name: test-roman-api
    build:
      dockerfile: Dockerfile
      context: './api'
      target: development
    depends_on:
      - postgres
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - "9229:9229"
    entrypoint: [ "npm", "run", "start:${NODE_ENV}" ]
    env_file:
      - .env
    networks:
      - ta_net
    restart: unless-stopped

  client:
    container_name: test-roman-client
    build:
      dockerfile: Dockerfile.dev
      context: './client'
    depends_on:
      - postgres
    volumes:
      - ./client/:/app
      - /app/node_modules
    restart: always
    networks:
      - ta_net
    ports:
      - "3000:3000"

  pgadmin:
    image: dpage/pgadmin4
    container_name: ta_pgadmin
    restart: always
    networks:
      - ta_net
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    depends_on:
      - postgres
    links:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin

networks:
  ta_net:
volumes:
  pg_data:
  pgadmin-data:
